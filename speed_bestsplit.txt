Timer unit: 1e-06 s

Total time: 0.00533 s
File: <ipython-input-86-eb6a69bc8d78>
Function: best_splitting_feature at line 88

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    88                                           def best_splitting_feature(X, y, Nbins):
    89                                                   
    90         1           13     13.0      0.2      best_feature = None # Keep track of the best feature 
    91         1            1      1.0      0.0      best_threshold = None
    92         1            1      1.0      0.0      best_I = -1     # Keep track of the best info gain so far 
    93                                           
    94                                               #the number of data points in the parent node
    95         1            3      3.0      0.1      num_data_points = y.shape[0]
    96                                               
    97                                               #the entropy of the parent node
    98         1          385    385.0      7.2      Hy = entropy(y)
    99                                               
   100                                               # Loop through each feature to consider splitting on that feature
   101        29           24      0.8      0.5      for feature in range(X.shape[1]):
   102                                                   
   103        28           60      2.1      1.1          fvals = X[:,feature]
   104        28          938     33.5     17.6          fvals = np.sort(fvals)  #sorting the values
   105        28           26      0.9      0.5          if num_data_points > Nbins:            
   106        28          245      8.8      4.6              fvals = fvals[range(0,num_data_points,Nbins)]
   107                                                   
   108                                                   #loop through all values of current feature to find the best split
   109       308          348      1.1      6.5          for threshold in fvals:
   110                                           
   111                                                       # The left split will have all data points where the feature value is smaller than threshold
   112       280          983      3.5     18.4              ind_left = X[:,feature] < threshold
   113                                                        # The right split will have all data points where the feature value is larger or equal
   114       280          828      3.0     15.5              ind_right = X[:,feature] >= threshold
   115                                                       
   116                                                       #compute info-gain for current feature and threshold split
   117       280         1247      4.5     23.4              I = infogain(Hy,len(y),y[ind_left],y[ind_right])
   118                                                       
   119                                                       # If this is the best error we have found so far, store the feature as best_feature
   120                                                       # the threshold as the best threshold and the error as best_error
   121       280          227      0.8      4.3              if I > best_I:
   122         1            0      0.0      0.0                  best_feature = feature
   123         1            1      1.0      0.0                  best_threshold = threshold
   124         1            0      0.0      0.0                  best_I = I
   125                                                   
   126         1            0      0.0      0.0      return best_feature, best_threshold # Return the best feature and threshold